plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    // maven
    id 'maven-publish'
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

// maven
def BUILD_VERSION = '1.0.0.0'

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
artifacts {
    archives androidSourcesJar
}

afterEvaluate {
    publishing {
        publications {
            aar(MavenPublication) {
                groupId "com.lepu.algpro"
                artifactId "algpro"
                version BUILD_VERSION
                artifact androidSourcesJar
                artifact("$buildDir/outputs/aar/algpro-release.aar")
            }
        }
        repositories {
            maven {
                url "https://git.lepudev.com/api/v4/projects/268/packages/maven"
                name "LepuBle"
                credentials(HttpHeaderCredentials) {
                    name = "Deploy-Token"
                    value = "jMCHXv-upTT47AXegB1E"
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }
    }
}